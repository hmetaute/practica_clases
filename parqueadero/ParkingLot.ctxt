#BlueJ class context
comment0.target=ParkingLot
comment0.text=\r\n\ Esta\ es\ la\ Clase\ que\ representa\ un\ parqueadero.\r\n\ La\ Clase\ tiene\ hasta\ aora\ 3\ atributos\:\ capacidad,\ precio\ y\ lista\ de\ celdas.\r\n
comment1.params=cellCapacity\ preciohora
comment1.target=ParkingLot(int,\ double)
comment1.text=\r\n\ Este\ es\ el\ M\u00E9todo\ contructor\ que\ sirve\ para\ crear\ un\ objeto\ de\ tipo\ de\ parqueadero.\ Si\ no\ se\ crean\r\n\ \ \ \ \ los\ objetos\ en\ el\ constructor\ puede\ aparecer\ un\ error\ Null\ pointer\ exception.\r\n
comment2.params=
comment2.target=int\ GetEmptyCells()
comment2.text=\r\n\ Metodo\ para\ saber\ cu\u00E1ntas\ celdas\ est\u00E1n\ vac\u00EDas.\r\n\ @return\ el\ n\u00FAmero\ de\ celdas\ vac\u00EDas\ en\ el\ parqueadero.\r\n
comment3.params=
comment3.target=int\ getNextAvailableCell()
comment3.text=\r\n\ Metodo\ para\ saber\ cu\u00E1l\ es\ la\ pr\u00F3xima\ celda\ vac\u00EDa\ dentro\ del\ parquadero.\r\n\ @return\ la\ posici\u00F3n\ de\ la\ primera\ celda\ vac\u00EDa\ que\ encuentra\ o\ -1\ si\ no\ hay\ celdas\ vac\u00EDas.\r\n
comment4.params=newVehicle
comment4.target=boolean\ parkVehicle(Vehicle)
comment4.text=\r\n\ Metodo\ que\ permite\ parquear\ un\ veh\u00EDculo\ en\ una\ celda\ disponible.\r\n\ @return\ false\ si\ no\ parquea\ ning\u00FAn\ veh\u00EDculo\ en\ una\ celda\ cuando\ el\ parqueadero\ est\u00E1\ lleno.\r\n
comment5.params=newVehicle
comment5.target=int\ findParkedVehicle(Vehicle)
comment5.text=\r\n\ Metodo\ que\ permite\ encontrar\ la\ celda\ d\u00F3nde\ est\u00E1\ un\ veh\u00EDculo\ parqueado.\r\n\ @return\ un\ entero\ con\ la\ posici\u00F3n\ de\ la\ celda\ donde\ est\u00E1\ parqueado\ o\ -1\ si\ no\ encentra\ el\ veh\u00EDculo.\r\n
comment6.params=newVehicle
comment6.target=int\ removeVehicle(Vehicle)
comment6.text=\r\n\ Metodo\ que\ permite\ sacar\ un\ carro\ del\ parqueadero\ para\ dejar\ la\ celda\ vac\u00EDa.\r\n\ @return\ un\ las\ horas\ que\ estuvo\ parqueado\ el\ carro\ y\ deja\ la\ celda\ vac\u00EDa.\r\n
numComments=7
